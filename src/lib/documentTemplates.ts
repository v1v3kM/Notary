export interface DocumentTemplate {
  name: string
  type: 'rent' | 'affidavit' | 'partnership' | 'other'
  description: string
  htmlTemplate: string
  fields: Array<{
    name: string
    label: string
    type: 'text' | 'number' | 'date' | 'textarea' | 'select'
    required: boolean
    options?: string[]
    placeholder?: string
  }>
}

export const documentTemplates: DocumentTemplate[] = [
  {
    name: 'Rental Agreement',
    type: 'rent',
    description: 'Standard rental agreement template for residential properties',
    htmlTemplate: `
      <div class="document-template rent-agreement">
        <div class="header">
          <h1>RENTAL AGREEMENT</h1>
          <div class="document-info">
            <p>Document ID: {{documentId}}</p>
            <p>Date: {{currentDate}}</p>
          </div>
        </div>
        
        <div class="content">
          <h2>PROPERTY DETAILS</h2>
          <p><strong>Property Address:</strong> {{propertyAddress}}</p>
          <p><strong>Monthly Rent:</strong> ₹{{monthlyRent}}</p>
          <p><strong>Security Deposit:</strong> ₹{{securityDeposit}}</p>
          <p><strong>Lease Duration:</strong> {{leaseDuration}} months</p>
          <p><strong>Lease Start Date:</strong> {{startDate}}</p>
          
          <h2>PARTIES</h2>
          <div class="party">
            <p><strong>Landlord:</strong> {{landlord}}</p>
          </div>
          <div class="party">
            <p><strong>Tenant:</strong> {{tenant}}</p>
          </div>
          
          <h2>TERMS AND CONDITIONS</h2>
          <ol>
            <li>The tenant agrees to pay the monthly rent of ₹{{monthlyRent}} on or before the 5th of each month.</li>
            <li>A security deposit of ₹{{securityDeposit}} has been paid and will be refunded upon termination of the lease, subject to deductions for damages.</li>
            <li>The lease period is for {{leaseDuration}} months starting from {{startDate}}.</li>
            <li>The tenant shall use the property only for residential purposes.</li>
            <li>The tenant is responsible for maintaining the property in good condition.</li>
            <li>No alterations to the property without written consent from the landlord.</li>
          </ol>
          
          <div class="signatures">
            <div class="signature-block">
              <p>Landlord Signature</p>
              <div class="signature-line"></div>
              <p>{{landlord}}</p>
            </div>
            <div class="signature-block">
              <p>Tenant Signature</p>
              <div class="signature-line"></div>
              <p>{{tenant}}</p>
            </div>
          </div>
        </div>
        
        <div class="footer">
          <p>Generated by NotaryPro - Digital Document Platform</p>
          <p>This document is legally binding when signed by all parties</p>
        </div>
      </div>
    `,
    fields: [
      { name: 'propertyAddress', label: 'Property Address', type: 'textarea', required: true, placeholder: 'Enter complete property address' },
      { name: 'monthlyRent', label: 'Monthly Rent (₹)', type: 'number', required: true, placeholder: '25000' },
      { name: 'securityDeposit', label: 'Security Deposit (₹)', type: 'number', required: true, placeholder: '50000' },
      { name: 'leaseDuration', label: 'Lease Duration (months)', type: 'number', required: true, placeholder: '12' },
      { name: 'startDate', label: 'Lease Start Date', type: 'date', required: true },
      { name: 'landlord', label: 'Landlord Name', type: 'text', required: true, placeholder: 'Full name of landlord' },
      { name: 'tenant', label: 'Tenant Name', type: 'text', required: true, placeholder: 'Full name of tenant' }
    ]
  },
  
  {
    name: 'Affidavit',
    type: 'affidavit',
    description: 'General purpose affidavit template for legal declarations',
    htmlTemplate: `
      <div class="document-template affidavit">
        <div class="header">
          <h1>AFFIDAVIT</h1>
          <div class="document-info">
            <p>Document ID: {{documentId}}</p>
            <p>Date: {{currentDate}}</p>
          </div>
        </div>
        
        <div class="content">
          <h2>DEPONENT DETAILS</h2>
          <p><strong>Name:</strong> {{deponentName}}</p>
          <p><strong>Father's/Husband's Name:</strong> {{fatherName}}</p>
          <p><strong>Address:</strong> {{address}}</p>
          
          <h2>AFFIDAVIT STATEMENT</h2>
          <p>I, {{deponentName}}, aged {{age}} years, son/daughter of {{fatherName}}, resident of {{address}}, do hereby solemnly affirm and declare as under:</p>
          
          <div class="statement">
            <p>{{statement}}</p>
          </div>
          
          <p>I further state that the facts stated above are true and correct to the best of my knowledge and belief and nothing material has been concealed therefrom.</p>
          
          <div class="verification">
            <p><strong>VERIFICATION</strong></p>
            <p>Verified at {{place}} on this {{currentDate}} that the contents of the above affidavit are true and correct to the best of my knowledge and belief and nothing material has been concealed therefrom.</p>
          </div>
          
          <div class="signatures">
            <div class="signature-block">
              <p>Deponent</p>
              <div class="signature-line"></div>
              <p>{{deponentName}}</p>
            </div>
          </div>
        </div>
        
        <div class="footer">
          <p>Generated by NotaryPro - Digital Document Platform</p>
          <p>This affidavit is sworn and subscribed before me</p>
        </div>
      </div>
    `,
    fields: [
      { name: 'deponentName', label: 'Deponent Name', type: 'text', required: true, placeholder: 'Full name of person making affidavit' },
      { name: 'fatherName', label: 'Father\'s/Husband\'s Name', type: 'text', required: true, placeholder: 'Father or husband name' },
      { name: 'age', label: 'Age', type: 'number', required: true, placeholder: '25' },
      { name: 'address', label: 'Complete Address', type: 'textarea', required: true, placeholder: 'Complete residential address' },
      { name: 'statement', label: 'Affidavit Statement', type: 'textarea', required: true, placeholder: 'Enter the complete statement/declaration' },
      { name: 'place', label: 'Place of Verification', type: 'text', required: true, placeholder: 'City/Place where affidavit is made' }
    ]
  },
  
  {
    name: 'Partnership Deed',
    type: 'partnership',
    description: 'Partnership deed template for business partnerships',
    htmlTemplate: `
      <div class="document-template partnership-deed">
        <div class="header">
          <h1>PARTNERSHIP DEED</h1>
          <div class="document-info">
            <p>Document ID: {{documentId}}</p>
            <p>Date: {{currentDate}}</p>
          </div>
        </div>
        
        <div class="content">
          <h2>PARTNERSHIP DETAILS</h2>
          <p><strong>Partnership Name:</strong> {{partnershipName}}</p>
          <p><strong>Business Type:</strong> {{businessType}}</p>
          <p><strong>Start Date:</strong> {{startDate}}</p>
          <p><strong>Principal Place of Business:</strong> {{businessAddress}}</p>
          
          <h2>PARTNERS</h2>
          {{#each partners}}
          <div class="partner">
            <p><strong>Partner {{@index}}:</strong> {{name}}</p>
            <p><strong>Address:</strong> {{address}}</p>
            <p><strong>Capital Contribution:</strong> ₹{{capitalContribution}}</p>
            <p><strong>Profit Share:</strong> {{profitShare}}%</p>
          </div>
          {{/each}}
          
          <h2>TERMS AND CONDITIONS</h2>
          <ol>
            <li>The partnership shall commence from {{startDate}} and shall continue unless terminated as per the terms herein.</li>
            <li>The business of the partnership shall be {{businessType}}.</li>
            <li>Each partner shall contribute to the capital as mentioned above.</li>
            <li>Profits and losses shall be shared in the ratio of their capital contributions.</li>
            <li>All partners shall devote their full time and attention to the business.</li>
            <li>No partner shall enter into any business similar to the partnership business.</li>
            <li>All major decisions shall require unanimous consent of all partners.</li>
          </ol>
          
          <div class="signatures">
            {{#each partners}}
            <div class="signature-block">
              <p>Partner Signature</p>
              <div class="signature-line"></div>
              <p>{{name}}</p>
            </div>
            {{/each}}
          </div>
        </div>
        
        <div class="footer">
          <p>Generated by NotaryPro - Digital Document Platform</p>
          <p>This partnership deed is executed by all partners</p>
        </div>
      </div>
    `,
    fields: [
      { name: 'partnershipName', label: 'Partnership Name', type: 'text', required: true, placeholder: 'Name of the partnership firm' },
      { name: 'businessType', label: 'Business Type', type: 'text', required: true, placeholder: 'Type of business activity' },
      { name: 'startDate', label: 'Partnership Start Date', type: 'date', required: true },
      { name: 'businessAddress', label: 'Business Address', type: 'textarea', required: true, placeholder: 'Principal place of business' }
    ]
  }
]

export class DocumentTemplateService {
  private static instance: DocumentTemplateService

  private constructor() {}

  static getInstance(): DocumentTemplateService {
    if (!DocumentTemplateService.instance) {
      DocumentTemplateService.instance = new DocumentTemplateService()
    }
    return DocumentTemplateService.instance
  }

  /**
   * Get all available templates
   */
  getAllTemplates(): DocumentTemplate[] {
    return documentTemplates
  }

  /**
   * Get template by type
   */
  getTemplateByType(type: string): DocumentTemplate | null {
    return documentTemplates.find(template => template.type === type) || null
  }

  /**
   * Get template by name
   */
  getTemplateByName(name: string): DocumentTemplate | null {
    return documentTemplates.find(template => template.name === name) || null
  }

  /**
   * Render template with data
   */
  renderTemplate(template: DocumentTemplate, data: Record<string, unknown>): string {
    let html = template.htmlTemplate

    // Replace simple placeholders
    Object.entries(data).forEach(([key, value]) => {
      const placeholder = new RegExp(`{{${key}}}`, 'g')
      html = html.replace(placeholder, String(value || ''))
    })

    // Add current date if not provided
    if (!data.currentDate) {
      const currentDate = new Date().toLocaleDateString('en-IN')
      html = html.replace(/{{currentDate}}/g, currentDate)
    }

    // Add document ID if not provided
    if (!data.documentId) {
      const documentId = `DOC_${Date.now()}`
      html = html.replace(/{{documentId}}/g, documentId)
    }

    return html
  }

  /**
   * Generate HTML for preview
   */
  generatePreviewHTML(template: DocumentTemplate, data: Record<string, unknown>): string {
    const renderedHTML = this.renderTemplate(template, data)
    
    return `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <title>${template.name}</title>
        <style>
          body {
            font-family: 'Times New Roman', serif;
            line-height: 1.6;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background: white;
          }
          
          .document-template {
            background: white;
            padding: 40px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
          }
          
          .header {
            text-align: center;
            border-bottom: 2px solid #333;
            padding-bottom: 20px;
            margin-bottom: 30px;
          }
          
          .header h1 {
            margin: 0;
            font-size: 24px;
            font-weight: bold;
            text-transform: uppercase;
          }
          
          .document-info {
            margin-top: 10px;
            font-size: 12px;
          }
          
          .content h2 {
            color: #333;
            border-bottom: 1px solid #ccc;
            padding-bottom: 5px;
            margin-top: 30px;
            margin-bottom: 15px;
          }
          
          .party, .partner {
            background: #f9f9f9;
            padding: 15px;
            margin: 10px 0;
            border-left: 4px solid #007bff;
          }
          
          .statement {
            background: #f8f9fa;
            padding: 20px;
            margin: 20px 0;
            border-left: 4px solid #28a745;
            font-style: italic;
          }
          
          .verification {
            margin: 30px 0;
            padding: 15px;
            background: #fff3cd;
            border: 1px solid #ffeaa7;
          }
          
          .signatures {
            display: flex;
            justify-content: space-around;
            margin: 50px 0;
            flex-wrap: wrap;
          }
          
          .signature-block {
            text-align: center;
            margin: 20px;
            min-width: 200px;
          }
          
          .signature-line {
            border-bottom: 1px solid #333;
            width: 200px;
            height: 50px;
            margin: 10px auto;
          }
          
          .footer {
            text-align: center;
            margin-top: 50px;
            padding-top: 20px;
            border-top: 1px solid #ccc;
            font-size: 12px;
            color: #666;
          }
          
          ol, ul {
            padding-left: 20px;
          }
          
          li {
            margin: 8px 0;
          }
          
          @media print {
            body { margin: 0; padding: 0; }
            .document-template { box-shadow: none; }
          }
        </style>
      </head>
      <body>
        ${renderedHTML}
      </body>
      </html>
    `
  }

  /**
   * Validate required fields
   */
  validateData(template: DocumentTemplate, data: Record<string, unknown>): { isValid: boolean; errors: string[] } {
    const errors: string[] = []

    template.fields.forEach(field => {
      if (field.required && (!data[field.name] || data[field.name] === '')) {
        errors.push(`${field.label} is required`)
      }
    })

    return {
      isValid: errors.length === 0,
      errors
    }
  }
}

export const documentTemplateService = DocumentTemplateService.getInstance()
